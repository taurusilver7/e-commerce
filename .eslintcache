[{"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\index.js":"1","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\App.js":"2","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Header\\Header.js":"3","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Navbar\\Navbar.js":"4","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Footer\\Footer.js":"5","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Home\\Home.js":"6","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Product\\Product.js":"7","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\index.js":"8","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\lib\\commerce.js":"9","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Cart\\Cart.js":"10","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Subtotal\\Subtotal.js":"11","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Cart\\CartItem\\CartItem.js":"12","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\Checkout.js":"13","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\styles.js":"14","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\AddressForm\\AddressForm.js":"15","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\PaymentForm\\PaymentForm.js":"16","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\AddressForm\\CustomText.js":"17","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\PaymentForm\\Review.js":"18"},{"size":168,"mtime":1612200444871,"results":"19","hashOfConfig":"20"},{"size":3469,"mtime":1612520295337,"results":"21","hashOfConfig":"20"},{"size":1806,"mtime":1612451029627,"results":"22","hashOfConfig":"20"},{"size":813,"mtime":1612202446152,"results":"23","hashOfConfig":"20"},{"size":3819,"mtime":1612449431911,"results":"24","hashOfConfig":"20"},{"size":1448,"mtime":1612516356471,"results":"25","hashOfConfig":"20"},{"size":881,"mtime":1612516561192,"results":"26","hashOfConfig":"20"},{"size":252,"mtime":1612452093617,"results":"27","hashOfConfig":"20"},{"size":261,"mtime":1612509947302,"results":"28","hashOfConfig":"20"},{"size":2861,"mtime":1612516721667,"results":"29","hashOfConfig":"20"},{"size":744,"mtime":1612459626880,"results":"30","hashOfConfig":"20"},{"size":1345,"mtime":1612517223804,"results":"31","hashOfConfig":"20"},{"size":4301,"mtime":1612517920876,"results":"32","hashOfConfig":"20"},{"size":1210,"mtime":1612452560277,"results":"33","hashOfConfig":"20"},{"size":6139,"mtime":1612505320995,"results":"34","hashOfConfig":"20"},{"size":2936,"mtime":1612509561823,"results":"35","hashOfConfig":"20"},{"size":584,"mtime":1612505043324,"results":"36","hashOfConfig":"20"},{"size":1031,"mtime":1612498528449,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1rw1fi3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\index.js",[],["78","79"],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\App.js",["80"],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Header\\Header.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Navbar\\Navbar.js",[],["81","82"],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Footer\\Footer.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Home\\Home.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Product\\Product.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\index.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\lib\\commerce.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Cart\\Cart.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Subtotal\\Subtotal.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Cart\\CartItem\\CartItem.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\Checkout.js",["83"],"import React, { useEffect, useState } from \"react\";\r\nimport useStyles from \"./styles\";\r\nimport AddressForm from \"./AddressForm/AddressForm\";\r\nimport PaymentForm from \"./PaymentForm/PaymentForm\";\r\n\r\nimport { commerce } from \"../../lib/commerce\";\r\n\r\nimport {\r\n  Paper,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Typography,\r\n  CircularProgress,\r\n  Divider,\r\n  Button,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst steps = [\"Shipping address\", \"Payment Details\"];\r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [chkoutTkn, setChkoutTkn] = useState(null);\r\n  const [shippingData, setShippingData] = useState({});\r\n  const [isFinished, setIsFinished] = useState(false);\r\n\r\n  const nextStep = () => setActiveStep((prevStep) => prevStep + 1);\r\n  const backStep = () => setActiveStep((prevStep) => prevStep - 1);\r\n\r\n  useEffect(() => {\r\n    if (cart.id) {\r\n      const generateToken = async () => {\r\n        try {\r\n          const token = await commerce?.checkout?.generateToken(cart.id, {\r\n            type: \"cart\",\r\n          });\r\n          // console.log(token);\r\n          setChkoutTkn(token);\r\n        } catch (error) {\r\n          if (activeStep !== steps?.length) history.push(\"/\");\r\n        }\r\n      };\r\n      generateToken();\r\n    }\r\n  }, [cart]);\r\n\r\n  const test = (data) => {\r\n    setShippingData(data);\r\n\r\n    nextStep();\r\n  };\r\n\r\n  const timeOut = () => {\r\n    setTimeout(() => {\r\n      setIsFinished(true);\r\n    }, 3000);\r\n  };\r\n\r\n  let Confirmation = () =>\r\n    order.customer ? (\r\n      <>\r\n        <div>\r\n          <Typography variant=\"h5\">\r\n            Thank you for your purchase, {order.customer.firstname}{\" \"}\r\n            {order.customer.lastname}!\r\n          </Typography>\r\n          <Divider className={classes.divider} />\r\n          <Typography variant=\"subtitle2\">\r\n            Order ref: {order.customer_reference}\r\n          </Typography>\r\n        </div>\r\n        <br />\r\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\r\n          Back to home\r\n        </Button>\r\n      </>\r\n    ) : isFinished ? (\r\n      <>\r\n        <div>\r\n          <Typography variant=\"h5\">\r\n            Thank you for your purchase, {order.customer.firstname}{\" \"}\r\n            {order.customer.lastname}!\r\n          </Typography>\r\n          <Divider className={classes.divider} />\r\n        </div>\r\n        <br />\r\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\r\n          Back to home\r\n        </Button>\r\n      </>\r\n    ) : (\r\n      <div className={classes.spinner}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  // if (error) {\r\n  //   Confirmation = () => (\r\n  //     <>\r\n  //       <Typography variant=\"h5\">Error: {error}</Typography>\r\n  //       <br />\r\n  //       <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\r\n  //         Back to home\r\n  //       </Button>\r\n  //     </>\r\n  //   );\r\n  // }\r\n\r\n  const Form = () =>\r\n    activeStep === 0 ? (\r\n      <AddressForm\r\n        checkoutToken={chkoutTkn}\r\n        setShippingData={setShippingData}\r\n        test={test}\r\n      />\r\n    ) : (\r\n      <PaymentForm\r\n        checkoutToken={chkoutTkn}\r\n        shippingData={shippingData}\r\n        nextStep={nextStep}\r\n        backStep={backStep}\r\n        onCaptureCheckout={onCaptureCheckout}\r\n        timeOut={timeOut}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <div className={classes.toolbar}>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Typography variant=\"h4\" align=\"center\">\r\n              Checkout\r\n            </Typography>\r\n            <Stepper activeStep={activeStep} className={classes.stepper}>\r\n              {steps.map((step) => (\r\n                <Step key={step}>\r\n                  <StepLabel>{step}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n            {activeStep === steps?.length ? (\r\n              <Confirmation />\r\n            ) : (\r\n              chkoutTkn && <Form />\r\n            )}\r\n          </Paper>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\styles.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\AddressForm\\AddressForm.js",["84","85"],"import React, { useEffect, useState } from \"react\";\r\nimport FormInput from \"./CustomText\";\r\nimport { commerce } from \"../../../lib/commerce\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AddressForm = ({ checkoutToken, test }) => {\r\n  const methods = useForm();\r\n\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n\r\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n    id: code,\r\n    label: name,\r\n  }));\r\n  // console.log(countries);\r\n  const subdivisions = Object.entries(shippingSubdivisions).map(\r\n    ([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    })\r\n  );\r\n  // console.log(subdivisions);\r\n\r\n  const options = shippingOptions.map((so) => ({\r\n    id: so.id,\r\n    label: `${so.desription} - (${so?.price?.formatted_with_symbol}`,\r\n  }));\r\n\r\n  const fetchShipCountries = async (chkoutToknId) => {\r\n    const response = await commerce.services?.localeListShippingCountries(\r\n      chkoutToknId\r\n    );\r\n    console.log(response?.countries);\r\n    setShippingCountries(response?.countries);\r\n    // keys are the named titles >> AL, IN, US.. get the first one.\r\n    setShippingCountry(Object.keys(response?.countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n      countryCode\r\n    );\r\n    // console.log(subdivisions);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (\r\n    checkoutTokenId,\r\n    country,\r\n    stateProvince = null\r\n  ) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region: stateProvince }\r\n    );\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0]?.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShipCountries(checkoutToken?.id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision)\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubdivision\r\n      );\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping Address\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit((data) =>\r\n            test({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubdivision,\r\n              shippingOption,\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <FormInput\r\n              required\r\n              defaultValue=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First Name\"\r\n            />\r\n            <FormInput\r\n              required\r\n              defaultValue=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last Name\"\r\n            />\r\n            <FormInput\r\n              required\r\n              defaultValue=\"address1\"\r\n              name=\"address1\"\r\n              label=\"Address 1\"\r\n            />\r\n            <FormInput\r\n              required\r\n              defaultValue=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n            />\r\n            <FormInput required defaultValue=\"city\" name=\"city\" label=\"City\" />\r\n            <FormInput\r\n              required\r\n              defaultValue=\"zip\"\r\n              name=\"zip\"\r\n              label=\"ZIP / Postal code\"\r\n            />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select\r\n                value={shippingCountry}\r\n                fullWidth\r\n                onChange={(e) => setShippingCountry(e.target.value)}\r\n              >\r\n                {countries.map((country) => (\r\n                  <MenuItem key={country.id} value={country.id}>\r\n                    {country.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select\r\n                value={shippingSubdivision}\r\n                fullWidth\r\n                onChange={(e) => setShippingSubdivision(e.target.value)}\r\n              >\r\n                {subdivisions.map((subdivision) => (\r\n                  <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                    {subdivision.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={e => setShippingOption(e.target.value)}>\r\n              {options.map((option) => (\r\n                  <MenuItem key={option.id} value={option.id}>\r\n                    {Option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid> */}\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Button component={Link} to=\"/cart\" variant=\"outlined\">\r\n              Back to cart\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\PaymentForm\\PaymentForm.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\AddressForm\\CustomText.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\PaymentForm\\Review.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":21},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":49,"column":6,"nodeType":"98","endLine":49,"endColumn":12,"suggestions":"99"},{"ruleId":"90","severity":1,"message":"100","line":38,"column":9,"nodeType":"92","messageId":"93","endLine":38,"endColumn":16},{"ruleId":"96","severity":1,"message":"101","line":93,"column":6,"nodeType":"98","endLine":93,"endColumn":27,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar",["103"],["104"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["105"],"'options' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"111","text":"112"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"113","text":"114"},[1444,1450],"[activeStep, cart, history]",[2773,2794],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]