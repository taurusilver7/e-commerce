[{"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\index.js":"1","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\App.js":"2","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Header\\Header.js":"3","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Navbar\\Navbar.js":"4","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Footer\\Footer.js":"5","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Home\\Home.js":"6","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Product\\Product.js":"7","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\index.js":"8","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\lib\\commerce.js":"9","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Cart\\Cart.js":"10","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Subtotal\\Subtotal.js":"11","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Cart\\CartItem\\CartItem.js":"12","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\Checkout.js":"13","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\styles.js":"14","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\AddressForm\\AddressForm.js":"15","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\PaymentForm\\PaymentForm.js":"16","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\AddressForm\\CustomText.js":"17","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\PaymentForm\\Review.js":"18"},{"size":168,"mtime":1612200444871,"results":"19","hashOfConfig":"20"},{"size":3469,"mtime":1612520295337,"results":"21","hashOfConfig":"20"},{"size":1806,"mtime":1612451029627,"results":"22","hashOfConfig":"20"},{"size":813,"mtime":1612202446152,"results":"23","hashOfConfig":"20"},{"size":3819,"mtime":1612449431911,"results":"24","hashOfConfig":"20"},{"size":1448,"mtime":1612516356471,"results":"25","hashOfConfig":"20"},{"size":881,"mtime":1612516561192,"results":"26","hashOfConfig":"20"},{"size":252,"mtime":1612452093617,"results":"27","hashOfConfig":"20"},{"size":261,"mtime":1612509947302,"results":"28","hashOfConfig":"20"},{"size":2861,"mtime":1612516721667,"results":"29","hashOfConfig":"20"},{"size":744,"mtime":1612459626880,"results":"30","hashOfConfig":"20"},{"size":1345,"mtime":1612517223804,"results":"31","hashOfConfig":"20"},{"size":4268,"mtime":1612521109227,"results":"32","hashOfConfig":"20"},{"size":1210,"mtime":1612452560277,"results":"33","hashOfConfig":"20"},{"size":6139,"mtime":1612505320995,"results":"34","hashOfConfig":"20"},{"size":2936,"mtime":1612509561823,"results":"35","hashOfConfig":"20"},{"size":584,"mtime":1612505043324,"results":"36","hashOfConfig":"20"},{"size":1031,"mtime":1612498528449,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1rw1fi3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\index.js",[],["78","79"],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\App.js",["80"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// all the backend are dealt with this\nimport { commerce } from \"./lib/commerce\";\n\nimport { CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { Header, Home, Footer, Cart, Checkout } from \"./components\";\n\nconst App = () => {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [products, setProducts] = useState([]);\n  // fetch app products from commerce\n  const [cart, setCart] = useState({});\n\n  // get orders & error message to the checkout\n  const [order, setOrder] = useState({});\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const fetchProducts = async () => {\n    // commerce returns a promise (response) with a list of products alrdy added to store.\n    const { data } = await commerce?.products.list();\n\n    setProducts(data);\n  };\n\n  const fetchCart = async () => {\n    const cart = await commerce?.cart.retrieve();\n    setCart(cart);\n    // setCart(await commerce.cart.retrieve());\n  };\n\n  const handleAddToCart = async (productId, qnty) => {\n    const item = await commerce?.cart?.add(productId, qnty);\n\n    setCart(item?.cart);\n  };\n\n  const handleUpdateCartQty = async (lineItemId, qnty) => {\n    const response = await commerce?.cart?.update(lineItemId, { qnty });\n\n    setCart(response?.cart);\n  };\n\n  const handleRem4mCart = async (lineItemId) => {\n    const response = await commerce?.cart?.remove(lineItemId);\n\n    setCart(response?.cart);\n  };\n\n  const refreshCart = async () => {\n    const newCart = await commerce?.cart?.refresh();\n    setCart(newCart);\n  };\n\n  const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n    try {\n      const incomingOrder = await commerce?.checkout?.capture(\n        checkoutTokenId,\n        newOrder\n      );\n      setOrder(incomingOrder);\n      refreshCart();\n    } catch (error) {\n      setErrorMsg(error.data?.error?.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCart();\n  }, []);\n  // console.log(products);\n  // console.log(cart);\n\n  const handleDrawerToggle = () => setMobileOpen(!mobileOpen);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Header\n              totalItems={cart?.total_items}\n              handleDrawerToggle={handleDrawerToggle}\n            />\n            <Home\n              products={products}\n              onAddToCart={handleAddToCart}\n              handleUpdateCartQty\n            />\n            <br />\n            <Footer />\n          </Route>\n\n          <Route path=\"/cart\">\n            <Header\n              totalItems={cart?.total_items}\n              handleDrawerToggle={handleDrawerToggle}\n            />\n            <Cart\n              cart={cart}\n              handleCartQty={handleUpdateCartQty}\n              handleRemCart={handleRem4mCart}\n            />\n            <br />\n            <Footer />\n          </Route>\n\n          <Route exact path=\"/checkout\">\n            <Header\n              totalItems={cart?.total_items}\n              handleDrawerToggle={handleDrawerToggle}\n            />\n            <Checkout\n              cart={cart}\n              order={order}\n              onCaptureCheckout={handleCaptureCheckout}\n              error={errorMsg}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Header\\Header.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Navbar\\Navbar.js",[],["81","82"],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Footer\\Footer.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Home\\Home.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Product\\Product.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\index.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\lib\\commerce.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Cart\\Cart.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Subtotal\\Subtotal.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Cart\\CartItem\\CartItem.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\Checkout.js",["83"],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\styles.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\AddressForm\\AddressForm.js",["84","85"],"import React, { useEffect, useState } from \"react\";\r\nimport FormInput from \"./CustomText\";\r\nimport { commerce } from \"../../../lib/commerce\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AddressForm = ({ checkoutToken, test }) => {\r\n  const methods = useForm();\r\n\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n\r\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n    id: code,\r\n    label: name,\r\n  }));\r\n  // console.log(countries);\r\n  const subdivisions = Object.entries(shippingSubdivisions).map(\r\n    ([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    })\r\n  );\r\n  // console.log(subdivisions);\r\n\r\n  const options = shippingOptions.map((so) => ({\r\n    id: so.id,\r\n    label: `${so.desription} - (${so?.price?.formatted_with_symbol}`,\r\n  }));\r\n\r\n  const fetchShipCountries = async (chkoutToknId) => {\r\n    const response = await commerce.services?.localeListShippingCountries(\r\n      chkoutToknId\r\n    );\r\n    console.log(response?.countries);\r\n    setShippingCountries(response?.countries);\r\n    // keys are the named titles >> AL, IN, US.. get the first one.\r\n    setShippingCountry(Object.keys(response?.countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n      countryCode\r\n    );\r\n    // console.log(subdivisions);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (\r\n    checkoutTokenId,\r\n    country,\r\n    stateProvince = null\r\n  ) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region: stateProvince }\r\n    );\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0]?.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShipCountries(checkoutToken?.id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision)\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubdivision\r\n      );\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping Address\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit((data) =>\r\n            test({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubdivision,\r\n              shippingOption,\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <FormInput\r\n              required\r\n              defaultValue=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First Name\"\r\n            />\r\n            <FormInput\r\n              required\r\n              defaultValue=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last Name\"\r\n            />\r\n            <FormInput\r\n              required\r\n              defaultValue=\"address1\"\r\n              name=\"address1\"\r\n              label=\"Address 1\"\r\n            />\r\n            <FormInput\r\n              required\r\n              defaultValue=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n            />\r\n            <FormInput required defaultValue=\"city\" name=\"city\" label=\"City\" />\r\n            <FormInput\r\n              required\r\n              defaultValue=\"zip\"\r\n              name=\"zip\"\r\n              label=\"ZIP / Postal code\"\r\n            />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select\r\n                value={shippingCountry}\r\n                fullWidth\r\n                onChange={(e) => setShippingCountry(e.target.value)}\r\n              >\r\n                {countries.map((country) => (\r\n                  <MenuItem key={country.id} value={country.id}>\r\n                    {country.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select\r\n                value={shippingSubdivision}\r\n                fullWidth\r\n                onChange={(e) => setShippingSubdivision(e.target.value)}\r\n              >\r\n                {subdivisions.map((subdivision) => (\r\n                  <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                    {subdivision.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={e => setShippingOption(e.target.value)}>\r\n              {options.map((option) => (\r\n                  <MenuItem key={option.id} value={option.id}>\r\n                    {Option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid> */}\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Button component={Link} to=\"/cart\" variant=\"outlined\">\r\n              Back to cart\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\PaymentForm\\PaymentForm.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\AddressForm\\CustomText.js",[],"G:\\Javascript\\JS\\React_JS\\e-commerce-shop\\src\\components\\Checkout\\PaymentForm\\Review.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":21},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":49,"column":6,"nodeType":"98","endLine":49,"endColumn":12,"suggestions":"99"},{"ruleId":"90","severity":1,"message":"100","line":38,"column":9,"nodeType":"92","messageId":"93","endLine":38,"endColumn":16},{"ruleId":"96","severity":1,"message":"101","line":93,"column":6,"nodeType":"98","endLine":93,"endColumn":27,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar",["103"],["104"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["105"],"'options' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"111","text":"112"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"113","text":"114"},[1444,1450],"[activeStep, cart, history]",[2773,2794],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]